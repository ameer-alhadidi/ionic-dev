{"version":3,"sources":["../../src/pages/signup/signup.module.ts","../../src/pages/signup/signup.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACV;AAatC,IAAa,gBAAgB;IAA7B;IAA+B,CAAC;IAAD,uBAAC;AAAD,CAAC;AAAnB,gBAAgB;IAX5B,sFAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAU;SACX;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,2DAAU,CAAC;SACrC;QACD,OAAO,EAAE;YACP,2DAAU;SACX;KACF,CAAC;GACW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACfa;AAMD;AAC2B;AACX;AACjB;AACgB;AAOxD,IAAa,UAAU;IAIrB,oBAAmB,GAAkB,EAAS,QAAsB,EAC3D,WAAwB,EAAS,WAA8B,EAC/D,SAA0B;QAFhB,QAAG,GAAH,GAAG,CAAe;QAAS,aAAQ,GAAR,QAAQ,CAAc;QAC3D,gBAAW,GAAX,WAAW,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAmB;QAC/D,cAAS,GAAT,SAAS,CAAiB;QAEjC,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC;YAClC,KAAK,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,EAAE,yEAAc,CAAC,OAAO,CAAC,CAAC,CAAC;YAC9E,QAAQ,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;SACnF,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,+BAAU,GAAV;QAAA,iBA4BC;QA3BC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACrC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC;iBACpF,IAAI,CAAC;gBACJ,KAAI,CAAC,GAAG,CAAC,OAAO,CAAC,4DAAQ,CAAC,CAAC;YAC7B,CAAC,EAAE,UAAC,KAAK;gBACP,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAE;oBAC3B,IAAI,YAAY,GAAW,KAAK,CAAC,OAAO,CAAC;oBACvC,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;wBAChC,OAAO,EAAE,YAAY;wBACrB,OAAO,EAAE;4BACP;gCACE,IAAI,EAAE,IAAI;gCACV,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF,CAAC,CAAC;oBACL,KAAK,CAAC,OAAO,EAAE,CAAC;gBAClB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBACrC,mBAAmB,EAAE,IAAI;aAC1B,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QACzB,CAAC;IACH,CAAC;IACH,iBAAC;AAAD,CAAC;AAjDY,UAAU;IALtB,uFAAS,EAAE;IACX,wFAAS,CAAC;QACT,QAAQ,EAAE,aAAa;OACG;KAC3B,CAAC;qJAKwB,CAA4C;QAC9C,sEAAiC,EAAiB;QACpD,OAAe;AA2CpC;SAjDY,UAAU,e","file":"0.main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SignupPage } from './signup';\n\n@NgModule({\n  declarations: [\n    SignupPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SignupPage),\n  ],\n  exports: [\n    SignupPage\n  ]\n})\nexport class SignupPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.module.ts","import { Component } from '@angular/core';\nimport { \n  IonicPage, \n  NavController, \n  LoadingController, \n  Loading, \n  AlertController } from 'ionic-angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthProvider } from '../../providers/auth/auth';\nimport { HomePage } from '../home/home';\nimport { EmailValidator } from '../../validators/email';\n\n@IonicPage()\n@Component({\n  selector: 'page-signup',\n  templateUrl: 'signup.html',\n})\nexport class SignupPage {\n  public signupForm:FormGroup;\n  public loading:Loading;\n\n  constructor(public nav: NavController, public authData: AuthProvider, \n    public formBuilder: FormBuilder, public loadingCtrl: LoadingController, \n    public alertCtrl: AlertController) {\n\n    this.signupForm = formBuilder.group({\n      email: ['', Validators.compose([Validators.required, EmailValidator.isValid])],\n      password: ['', Validators.compose([Validators.minLength(6), Validators.required])]\n    });\n  }\n\n  /**\n   * If the form is valid it will call the AuthData service to sign the user up password displaying a loading\n   *  component while the user waits.\n   *\n   * If the form is invalid it will just log the form value, feel free to handle that as you like.\n   */\n  signupUser(){\n    if (!this.signupForm.valid){\n      console.log(this.signupForm.value);\n    } else {\n      this.authData.signupUser(this.signupForm.value.email, this.signupForm.value.password)\n      .then(() => {\n        this.nav.setRoot(HomePage);\n      }, (error) => {\n        this.loading.dismiss().then( () => {\n          var errorMessage: string = error.message;\n            let alert = this.alertCtrl.create({\n              message: errorMessage,\n              buttons: [\n                {\n                  text: \"Ok\",\n                  role: 'cancel'\n                }\n              ]\n            });\n          alert.present();\n        });\n      });\n\n      this.loading = this.loadingCtrl.create({\n        dismissOnPageChange: true,\n      });\n      this.loading.present();\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.ts"],"sourceRoot":""}